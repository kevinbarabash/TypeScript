tests/cases/compiler/strictAssignment2.ts(11,9): error TS2756: Argument of type 'Cat[]' is not assignable to parameter of type 'Animal[]'. Covariant assignment of aliases to non-readonly targets are unsafe.
tests/cases/compiler/strictAssignment2.ts(27,9): error TS2756: Argument of type 'CatNode' is not assignable to parameter of type 'AnimalNode'. Covariant assignment of aliases to non-readonly targets are unsafe.
tests/cases/compiler/strictAssignment2.ts(48,9): error TS2756: Argument of type 'CatsNode' is not assignable to parameter of type 'AnimalsNode'. Covariant assignment of aliases to non-readonly targets are unsafe.
tests/cases/compiler/strictAssignment2.ts(52,9): error TS2345: Argument of type '{ animals: Cat[]; }' is not assignable to parameter of type 'AnimalsNode'.
  Types of property 'animals' are incompatible.
    Type 'Cat[]' is not assignable to type 'Animal[]'. Covariant assignment of aliases to non-readonly targets are unsafe.
tests/cases/compiler/strictAssignment2.ts(61,17): error TS2345: Argument of type 'CatsNode' is not assignable to parameter of type 'Readonly<AnimalsNode>'.
  Types of property 'animals' are incompatible.
    Type 'Cat[]' is not assignable to type 'Animal[]'. Covariant assignment of aliases to non-readonly targets are unsafe.
tests/cases/compiler/strictAssignment2.ts(62,17): error TS2345: Argument of type '{ animals: Cat[]; }' is not assignable to parameter of type 'Readonly<AnimalsNode>'.
  Types of property 'animals' are incompatible.
    Type 'Cat[]' is not assignable to type 'Animal[]'. Covariant assignment of aliases to non-readonly targets are unsafe.
tests/cases/compiler/strictAssignment2.ts(69,9): error TS2756: Argument of type 'CatsNode' is not assignable to parameter of type 'ReadonlyAnimalsNode'. Covariant assignment of aliases to non-readonly targets are unsafe.


==== tests/cases/compiler/strictAssignment2.ts (7 errors) ====
    module StrictAssignment2 {
        class Animal {}
        class Cat { purr() {} }
        class Dog { bark() {} }
        
        const cats: Cat[] = [new Cat];
        
        function foo(animals: Animal[]) {
            animals.push(new Dog);
        }
        foo(cats); // error, prevent a Dog from getting added to cats
            ~~~~
!!! error TS2756: Argument of type 'Cat[]' is not assignable to parameter of type 'Animal[]'. Covariant assignment of aliases to non-readonly targets are unsafe.
!!! related TS2728 tests/cases/compiler/strictAssignment2.ts:3:17: 'purr' is declared here.
        foo([new Cat]);  // okay
        
        function readonlyFoo(animals: ReadonlyArray<Animal>) {
            // can't mutate animals
        }
        readonlyFoo(cats); // okay since readonlyFoo can't mutate animals param
        
        type CatNode = { animal: Cat };
        type AnimalNode = { animal: Animal };
        
        const catNode: CatNode = { animal: new Cat };
        
        function bar(node: AnimalNode) {
            node.animal = new Dog;
        }
        bar(catNode); // error, prevent catNode.animal from becoming a Dog
            ~~~~~~~
!!! error TS2756: Argument of type 'CatNode' is not assignable to parameter of type 'AnimalNode'. Covariant assignment of aliases to non-readonly targets are unsafe.
        bar({ animal: new Cat }); // okay, no other references to the new Cat
        
        function readonlyBar(node: Readonly<AnimalNode>) {
            // can't mutate node and change the animal property
        }
        readonlyBar(catNode); // okay since readonlyBar can't mutate node param
        
        
        type CatsNode = { animals: Cat[] };
        type AnimalsNode = { animals: Animal[] };
        type ReadonlyAnimalsNode = { animals: ReadonlyArray<Animal> };
        
        // const catsNode: CatsNode = { animals: [new Cat] };
        const catsNode: CatsNode = { animals: cats };
        
        function baz(node: AnimalsNode) {
            node.animals = [new Dog];
            node.animals.push(new Dog);
            }
            
        baz(catsNode); // error
            ~~~~~~~~
!!! error TS2756: Argument of type 'CatsNode' is not assignable to parameter of type 'AnimalsNode'. Covariant assignment of aliases to non-readonly targets are unsafe.
        // prevents both replacing catNode.animals with a new array containing 
        // a Dog or adding a Dog to the animals property
        
        baz({ animals: cats }); // error
            ~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ animals: Cat[]; }' is not assignable to parameter of type 'AnimalsNode'.
!!! error TS2345:   Types of property 'animals' are incompatible.
!!! error TS2345:     Type 'Cat[]' is not assignable to type 'Animal[]'. Covariant assignment of aliases to non-readonly targets are unsafe.
        // prevent adding a dog to the animals property
        
        baz({ animals: [new Cat] }); // okay, no other references to the array of Cats
            
        function readonlyBaz(node: Readonly<AnimalsNode>) {
            // can't set node.animals to a new array
            node.animals.push(new Dog);
        }
        readonlyBaz(catsNode); // error, prevent adding a Dog to catsNode.animals
                    ~~~~~~~~
!!! error TS2345: Argument of type 'CatsNode' is not assignable to parameter of type 'Readonly<AnimalsNode>'.
!!! error TS2345:   Types of property 'animals' are incompatible.
!!! error TS2345:     Type 'Cat[]' is not assignable to type 'Animal[]'. Covariant assignment of aliases to non-readonly targets are unsafe.
        readonlyBaz({ animals: cats }); // error, prevent adding a dot to cats
                    ~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ animals: Cat[]; }' is not assignable to parameter of type 'Readonly<AnimalsNode>'.
!!! error TS2345:   Types of property 'animals' are incompatible.
!!! error TS2345:     Type 'Cat[]' is not assignable to type 'Animal[]'. Covariant assignment of aliases to non-readonly targets are unsafe.
        readonlyBaz({ animals: [new Cat] }); // okay
        
        function qux(node: ReadonlyAnimalsNode) {
            node.animals = [new Dog];
            // can't add a Dog to node.animals
        }
        qux(catsNode); // error
            ~~~~~~~~
!!! error TS2756: Argument of type 'CatsNode' is not assignable to parameter of type 'ReadonlyAnimalsNode'. Covariant assignment of aliases to non-readonly targets are unsafe.
        // prevent replacing catNode.animals with a new array containing a Dog
        
        qux({ animals: cats }); // okay
        // replacing animals with a new array is fine since { animal: cats } is literal
        
        qux({ animals: [new Cat] }); // okay   
            
        function readonlyQux(node: Readonly<ReadonlyAnimalsNode>) {
            // can't set node.animals to a new array
            // can't add a Dog to node.animals
        }
        
        readonlyQux(catsNode); // okay
        readonlyQux({ animals: cats }); // okay
        readonlyQux({ animals: [new Cat] }); // okay
    }
    